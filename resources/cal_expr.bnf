if-expr = <IF> <LP> logic-expr <','>  expr (<','> expr)? <RP> | expr
expr = logic-expr | if-expr | <LP> expr <RP>
logic-expr = and-expr (<OR_OP> and-expr)*
and-expr = le-expr (<AND_OP> le-expr)+ / le-expr
le-expr = (STR/cc-expr/expr) | le-expr RL_OP le-expr
OR_OP = 'or' | '或'
AND_OP = 'and' | '且'
<RL_OP> = '>=' | '>' | '<=' | '<' | '!=' | '=' | 'like' | '像' | 'reglike' | '正则像'
cc-expr = md-expr (AS_OP md-expr)*
md-expr = pow-expr (MD_OP pow-expr)*
pow-expr = atom (POW atom)*
atom = STR | (NUM / attr) | fun_expr | logic-expr | if-expr
fun_expr = fun <LP> ((cc-expr (<','> cc-expr)*) | ε ) <RP>
attr = ID
<IF> = 'if'
fun = ID
<LP> = '('
<RP> = ')'
<MD_OP> = '*' | '/'
<AS_OP> = '+' | '-'
<POW> = '^'
<NUM> = #'\d+(?:\.\d+)?'
<ID> = !'if' #'[^\s()+\-*/\^><=!,]+'
<STR> = #'".+?"'
